{"ast":null,"code":"import _objectWithoutProperties from\"/home/hadooop/Desktop/development/MERN/MernAuth/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useContext}from\"react\";import{Route,Redirect}from\"react-router-dom\";import{AuthContext}from\"../context/AuthContext\";var UnPrivatRoute=function UnPrivatRoute(_ref){var Component=_ref.component,rest=_objectWithoutProperties(_ref,[\"component\"]);var _useContext=useContext(AuthContext),isAuthenticated=_useContext.isAuthenticated;return/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{render:function render(props){if(isAuthenticated){return/*#__PURE__*/React.createElement(Redirect,{to:{pathname:\"/\",state:{from:props.location}}});}else{return/*#__PURE__*/React.createElement(Component,props);}}}));};export default UnPrivatRoute;","map":{"version":3,"sources":["/home/hadooop/Desktop/development/MERN/MernAuth/react/src/hoc/UnPrivatRoute.jsx"],"names":["React","useContext","Route","Redirect","AuthContext","UnPrivatRoute","Component","component","rest","isAuthenticated","props","pathname","state","from","location"],"mappings":"gMAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,OAASC,WAAT,KAA4B,wBAA5B,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAuC,IAAzBC,CAAAA,SAAyB,MAApCC,SAAoC,CAAXC,IAAW,8DAC/BP,UAAU,CAACG,WAAD,CADqB,CACnDK,eADmD,aACnDA,eADmD,CAE3D,mBACE,oBAAC,KAAD,kBACMD,IADN,EAEE,MAAM,CAAE,gBAACE,KAAD,CAAW,CACjB,GAAID,eAAJ,CAAqB,CACnB,mBACE,oBAAC,QAAD,EAAU,EAAE,CAAE,CAAEE,QAAQ,CAAE,GAAZ,CAAiBC,KAAK,CAAE,CAAEC,IAAI,CAAEH,KAAK,CAACI,QAAd,CAAxB,CAAd,EADF,CAGD,CAJD,IAIO,CACL,mBAAO,oBAAC,SAAD,CAAeJ,KAAf,CAAP,CACD,CACF,CAVH,GADF,CAcD,CAhBD,CAkBA,cAAeL,CAAAA,aAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nconst UnPrivatRoute = ({ component: Component, ...rest }) => {\n  const { isAuthenticated } = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isAuthenticated) {\n          return (\n            <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n          );\n        } else {\n          return <Component {...props} />;\n        }\n      }}\n    />\n  );\n};\n\nexport default UnPrivatRoute;\n"]},"metadata":{},"sourceType":"module"}