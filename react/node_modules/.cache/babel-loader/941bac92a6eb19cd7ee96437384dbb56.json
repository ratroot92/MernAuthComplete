{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/development/REACTJS/MernAuthComplete/react/src/component/Register.jsx\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from \"yup\";\nimport AuthService from \"./../services/AuthService\";\nimport Message from \"./../component/Message\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n/* Validation starts here */\n\nconst schema = yup.object().shape({\n  email: yup.string().required(function (value) {\n    toast.warning(\"Email is required\");\n  }).email(\"Invalid email\") // .test(\"Unique Email\", \"Email already in use\", function (value) {\n  //   return new Promise((resolve, reject) => {\n  //     axios\n  //       .post(\"http://localhost:3001/api/users/verify/email\", {\n  //         email: value,\n  //       })\n  //       .then((res) => {\n  //         if (res.data.msg === \"Email already been taken\") {\n  //           toast.error(res.data.msg);\n  //           resolve(false);\n  //         }\n  //         resolve(true);\n  //       });\n  //   });\n  ,\n  password: yup.string(\"Password must be string \").required(function (value) {\n    toast.warning(\"Password is required\");\n  }).min(3, function (value) {\n    toast.warning(\"Password  must be atleast 3 charachters\");\n  }).max(32, function (value) {\n    toast.warning(\"Password  must atmost 32 chrachters\");\n  }),\n  c_password: yup.string().required(function (value) {\n    toast.warning(\"Confirm password is required\");\n  }).oneOf([yup.ref(\"password\"), null], function (value) {\n    toast.warning(\"Unmatched passwords\");\n  }),\n  username: yup.string(\"Username must be string \").required(function (value) {\n    toast.warning(\"Username is required \");\n  }).min(3, function (value) {\n    toast.warning(\"Username  must be atleast 3 charachters\");\n  }).max(32, function (value) {\n    toast.warning(\"Username  must atmost 32 chrachters\");\n  }) // .test(\"Unique username\", \"Username already in taken\", function (value) {\n  //   return new Promise((resolve, reject) => {\n  //     axios\n  //       .post(\"http://localhost:3001/api/users/verify/username\", {\n  //         username: value,\n  //       })\n  //       .then((res) => {\n  //         if (res.data.msg === \"Username already been taken\") {\n  //           toast.error(res.data.msg);\n  //           resolve(false);\n  //         }\n  //         resolve(true);\n  //       });\n  //   });\n  // }),\n\n});\n/* Validation ends here */\n\n/* Functional componennet starts here */\n\nconst Register = () => {\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: 'onSubmit',\n    reValidateMode: 'onSubmit',\n    criteriaMode: \"firstError\",\n    shouldFocusError: true,\n    shouldUnregister: true,\n    defaultValues: {\n      username: \"\",\n      email: \"\",\n      mobile: \"\",\n      role: \"\",\n      password: \"\",\n      c_password: \"\"\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(d => console.log(d)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"username\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"email\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"role\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"password\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"c_password\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"mobile\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Register;","map":{"version":3,"sources":["/home/asd/Desktop/development/REACTJS/MernAuthComplete/react/src/component/Register.jsx"],"names":["React","useState","useRef","useEffect","useForm","yupResolver","yup","AuthService","Message","ToastContainer","toast","schema","object","shape","email","string","required","value","warning","password","min","max","c_password","oneOf","ref","username","Register","register","handleSubmit","resolver","mode","reValidateMode","criteriaMode","shouldFocusError","shouldUnregister","defaultValues","mobile","role","d","console","log"],"mappings":"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","sourcesContent":["import React ,{useState, useRef, useEffect}from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from \"yup\";\nimport AuthService from \"./../services/AuthService\";\nimport Message from \"./../component/Message\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n/* Validation starts here */\nconst schema = yup.object().shape({\n\n\n  email: yup\n    .string()\n    .required(function (value) {\n      toast.warning(\"Email is required\");\n    })\n    .email(\"Invalid email\")\n    // .test(\"Unique Email\", \"Email already in use\", function (value) {\n    //   return new Promise((resolve, reject) => {\n    //     axios\n    //       .post(\"http://localhost:3001/api/users/verify/email\", {\n    //         email: value,\n    //       })\n    //       .then((res) => {\n    //         if (res.data.msg === \"Email already been taken\") {\n    //           toast.error(res.data.msg);\n    //           resolve(false);\n    //         }\n    //         resolve(true);\n    //       });\n    //   });\n ,\n\n  password: yup\n    .string(\"Password must be string \")\n    .required(function (value) {toast.warning(\"Password is required\")})\n    .min(3, function (value) {toast.warning(\"Password  must be atleast 3 charachters\")})\n    .max(32, function (value) {toast.warning(\"Password  must atmost 32 chrachters\")}),\n  c_password: yup\n    .string()\n    .required(function (value) {toast.warning(\"Confirm password is required\")})\n    .oneOf([yup.ref(\"password\"), null], function (value) {toast.warning(\"Unmatched passwords\");}),\n  \n\n  username: yup\n    .string(\"Username must be string \")\n    .required(function (value) {toast.warning(\"Username is required \");})\n    .min(3, function (value) {\n      toast.warning(\"Username  must be atleast 3 charachters\");\n    })\n    .max(32, function (value) {\n      toast.warning(\"Username  must atmost 32 chrachters\");\n    })\n    // .test(\"Unique username\", \"Username already in taken\", function (value) {\n    //   return new Promise((resolve, reject) => {\n    //     axios\n    //       .post(\"http://localhost:3001/api/users/verify/username\", {\n    //         username: value,\n    //       })\n    //       .then((res) => {\n    //         if (res.data.msg === \"Username already been taken\") {\n    //           toast.error(res.data.msg);\n    //           resolve(false);\n    //         }\n    //         resolve(true);\n    //       });\n    //   });\n    // }),\n});\n/* Validation ends here */\n/* Functional componennet starts here */\n\nconst Register = () => {\n  const { register, handleSubmit } = useForm({\n    resolver: yupResolver(schema),\n    mode: 'onSubmit',\n  reValidateMode: 'onSubmit',\n  criteriaMode: \"firstError\",\n  shouldFocusError: true,\n  shouldUnregister: true,\n    defaultValues: {\n      username: \"\",\n      email: \"\",\n      mobile: \"\",\n      role: \"\",\n      password:\"\",\n      c_password:\"\",\n    }\n  });\n\n  return (\n    <form onSubmit={handleSubmit(d => console.log(d))}>\n      <input className=\"form-control\" name=\"username\" ref={register} />\n      <input className=\"form-control\" name=\"email\" type=\"text\" ref={register} />\n      <input className=\"form-control\" name=\"role\" ref={register} />\n      <input className=\"form-control\" name=\"password\" type=\"text\" ref={register} />\n      <input className=\"form-control\" name=\"c_password\" type=\"text\" ref={register} />\n      <input className=\"form-control\" name=\"mobile\" type=\"text\" ref={register} />\n      <input className=\"form-control\" type=\"submit\" />\n      <ToastContainer />\n    </form>\n  );\n};\nexport default Register;"]},"metadata":{},"sourceType":"module"}