{"ast":null,"code":"export default{login:function login(user){console.log(\" %c *** login[/user/login][POST] *** \",\"font-size: 12px; font-weight: bold;color:green\");console.log({user:user});var username=user[\"username\"][0];var password=user[\"password\"][0];return fetch(\"/user/login\",{method:\"post\",body:JSON.stringify({username:username,password:password}),headers:{\"Content-Type\":\"application/json\"}}).then(function(res){if(res.status!==401){return res.json().then(function(data){return data;});}else{return{isAuthenticated:false,user:{username:\"\",role:\"\"}};}});},register:function register(user){console.log(\" %c *** register[/user/register][POST] *** \",\"font-size: 12px; font-weight: bold;color:green\");return fetch(\"/user/register\",{method:\"post\",body:JSON.stringify(user),headers:{\"Content-Type\":\"application/json\"}}).then(function(res){return res.json();}).then(function(data){return data;});},logout:function logout(){console.log(\" %c *** logout[/user/login][POST] *** \",\"font-size: 12px; font-weight: bold;color:green\");return fetch(\"/user/logout\").then(function(res){return res.json();}).then(function(data){return data;});},/*\n! Sync backend and frontend (even after browser closes)\n! call this function with context API\n*/isAuthenticated:function isAuthenticated(){return fetch(\"/user/authenticated\").then(function(res){console.log(\" %c *** isAuthenticated[/user/authenticated][GET] *** \",\"font-size: 12px; font-weight: bold;color:green\");if(res.status!==401){return res.json().then(function(data){return data;});}else{return{isAuthenticated:false,user:{username:\"\",role:\"\"}};}}).then(function(data){return data;});}};","map":{"version":3,"sources":["/home/hadooop/Desktop/development/MERN/MernAuth/react/src/services/AuthService.jsx"],"names":["login","user","console","log","username","password","fetch","method","body","JSON","stringify","headers","then","res","status","json","data","isAuthenticated","role","register","logout"],"mappings":"AAAA,cAAe,CACbA,KAAK,CAAE,eAACC,IAAD,CAAU,CACfC,OAAO,CAACC,GAAR,CACE,uCADF,CAEE,gDAFF,EAIAD,OAAO,CAACC,GAAR,CAAY,CAAEF,IAAI,CAAJA,IAAF,CAAZ,EACA,GAAIG,CAAAA,QAAQ,CAAGH,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,CAAf,CACA,GAAII,CAAAA,QAAQ,CAAGJ,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,CAAf,CAEA,MAAOK,CAAAA,KAAK,CAAC,aAAD,CAAgB,CAC1BC,MAAM,CAAE,MADkB,CAE1BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBN,QAAQ,CAAEA,QADS,CAEnBC,QAAQ,CAAEA,QAFS,CAAf,CAFoB,CAM1BM,OAAO,CAAE,CACP,eAAgB,kBADT,CANiB,CAAhB,CAAL,CASJC,IATI,CASC,SAACC,GAAD,CAAS,CACf,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACtB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,SAACI,IAAD,QAAUA,CAAAA,IAAV,EAAhB,CAAP,CACD,CAFD,IAEO,CACL,MAAO,CAAEC,eAAe,CAAE,KAAnB,CAA0BhB,IAAI,CAAE,CAAEG,QAAQ,CAAE,EAAZ,CAAgBc,IAAI,CAAE,EAAtB,CAAhC,CAAP,CACD,CACF,CAfM,CAAP,CAgBD,CA1BY,CA4BbC,QAAQ,CAAE,kBAAClB,IAAD,CAAU,CAClBC,OAAO,CAACC,GAAR,CACE,6CADF,CAEE,gDAFF,EAIA,MAAOG,CAAAA,KAAK,CAAC,gBAAD,CAAmB,CAC7BC,MAAM,CAAE,MADqB,CAE7BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAFuB,CAG7BU,OAAO,CAAE,CACP,eAAgB,kBADT,CAHoB,CAAnB,CAAL,CAOJC,IAPI,CAOC,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACE,IAAJ,EAAT,EAPD,EAQJH,IARI,CAQC,SAACI,IAAD,QAAUA,CAAAA,IAAV,EARD,CAAP,CASD,CA1CY,CA4CbI,MAAM,CAAE,iBAAM,CACZlB,OAAO,CAACC,GAAR,CACE,wCADF,CAEE,gDAFF,EAIA,MAAOG,CAAAA,KAAK,CAAC,cAAD,CAAL,CACJM,IADI,CACC,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACE,IAAJ,EAAT,EADD,EAEJH,IAFI,CAEC,SAACI,IAAD,QAAUA,CAAAA,IAAV,EAFD,CAAP,CAGD,CApDY,CAqDb;;;EAIAC,eAAe,CAAE,0BAAM,CACrB,MAAOX,CAAAA,KAAK,CAAC,qBAAD,CAAL,CACJM,IADI,CACC,SAACC,GAAD,CAAS,CACbX,OAAO,CAACC,GAAR,CACE,wDADF,CAEE,gDAFF,EAIA,GAAIU,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACtB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,SAACI,IAAD,QAAUA,CAAAA,IAAV,EAAhB,CAAP,CACD,CAFD,IAEO,CACL,MAAO,CAAEC,eAAe,CAAE,KAAnB,CAA0BhB,IAAI,CAAE,CAAEG,QAAQ,CAAE,EAAZ,CAAgBc,IAAI,CAAE,EAAtB,CAAhC,CAAP,CACD,CACF,CAXI,EAYJN,IAZI,CAYC,SAACI,IAAD,QAAUA,CAAAA,IAAV,EAZD,CAAP,CAaD,CAvEY,CAAf","sourcesContent":["export default {\n  login: (user) => {\n    console.log(\n      \" %c *** login[/user/login][POST] *** \",\n      \"font-size: 12px; font-weight: bold;color:green\"\n    );\n    console.log({ user });\n    let username = user[\"username\"][0];\n    let password = user[\"password\"][0];\n\n    return fetch(\"/user/login\", {\n      method: \"post\",\n      body: JSON.stringify({\n        username: username,\n        password: password,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => {\n      if (res.status !== 401) {\n        return res.json().then((data) => data);\n      } else {\n        return { isAuthenticated: false, user: { username: \"\", role: \"\" } };\n      }\n    });\n  },\n\n  register: (user) => {\n    console.log(\n      \" %c *** register[/user/register][POST] *** \",\n      \"font-size: 12px; font-weight: bold;color:green\"\n    );\n    return fetch(\"/user/register\", {\n      method: \"post\",\n      body: JSON.stringify(user),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => data);\n  },\n\n  logout: () => {\n    console.log(\n      \" %c *** logout[/user/login][POST] *** \",\n      \"font-size: 12px; font-weight: bold;color:green\"\n    );\n    return fetch(\"/user/logout\")\n      .then((res) => res.json())\n      .then((data) => data);\n  },\n  /*\n! Sync backend and frontend (even after browser closes)\n! call this function with context API\n*/\n  isAuthenticated: () => {\n    return fetch(\"/user/authenticated\")\n      .then((res) => {\n        console.log(\n          \" %c *** isAuthenticated[/user/authenticated][GET] *** \",\n          \"font-size: 12px; font-weight: bold;color:green\"\n        );\n        if (res.status !== 401) {\n          return res.json().then((data) => data);\n        } else {\n          return { isAuthenticated: false, user: { username: \"\", role: \"\" } };\n        }\n      })\n      .then((data) => data);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}