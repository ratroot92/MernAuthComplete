{"ast":null,"code":"var _jsxFileName = \"/home/hadooop/Desktop/development/MERN/MernAuth/react/src/hoc/PrivateRoute.jsx\";\nimport React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./../context/AuthContext\";\n\nconst PrivateRoute = ({\n  component: Component,\n  roles,\n  ...rest\n}) => {\n  const {\n    isAuthenticated,\n    user\n  } = useContext(AuthContext);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (!isAuthenticated) return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: props.location\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 16\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 11\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/home/hadooop/Desktop/development/MERN/MernAuth/react/src/hoc/PrivateRoute.jsx"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","component","Component","roles","rest","isAuthenticated","user","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,0BAA5B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,KAAxB;AAA+B,KAAGC;AAAlC,CAAD,KAA8C;AACjE,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA4BV,UAAU,CAACG,WAAD,CAA5C;AACA,sBAAQ,oBAAC,KAAD,oBAAWK,IAAX;AAAiB,IAAA,MAAM,EAAEG,KAAK,IAAE;AACpC,UAAG,CAACF,eAAJ,EACE,oBAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAACG,UAAAA,QAAQ,EAAC,QAAV;AAAmBC,UAAAA,KAAK,EAAC;AAACC,YAAAA,IAAI,EAACH,KAAK,CAACI;AAAZ;AAAzB,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAEP,KAJS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAR;AAKE,CAPJ;;AAUA,eAAeX,YAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./../context/AuthContext\";\n\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => {\n  const { isAuthenticated, user } = useContext(AuthContext);\n  return (<Route {...rest} render={props=>{\n      if(!isAuthenticated)\n        return <Redirect to={{pathname:'/login',state:{from:props.location}}} />\n\n}}/>\n  )}\n\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}