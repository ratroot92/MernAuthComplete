{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/development/REACTJS/MernAuthComplete/react/src/component/Register.jsx\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport AuthService from \"./../services/AuthService\";\nimport Message from \"./../component/Message\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers\";\nimport { useForm } from \"react-hook-form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nconst schema = yup.object().shape({\n  email: yup.string().required(function (value) {\n    toast.warning(\"Email is required\");\n  }).email(\"Invalid email\").test(\"Unique Email\", \"Email already in use\", function (value) {\n    return new Promise((resolve, reject) => {\n      fetch.post(\"http://localhost:3001/api/users/verify/email\", {\n        email: value\n      }).then(res => {\n        if (res.data.msg === \"Email already been taken\") {\n          toast.error(res.data.msg);\n          resolve(false);\n        }\n\n        resolve(true);\n      });\n    });\n  }),\n  password: yup.string(\"Password must be string \").required(function (value) {\n    toast.warning(\"Password is required\");\n  }).min(3, function (value) {\n    toast.warning(\"Password  must be atleast 3 charachters\");\n  }).max(32, function (value) {\n    toast.warning(\"Password  must atmost 32 chrachters\");\n  }),\n  c_password: yup.string().required(function (value) {\n    toast.warning(\"Confirm password is required\");\n  }).oneOf([yup.ref(\"password\"), null], function (value) {\n    toast.warning(\"Unmatched passwords\");\n  }),\n  // agree:yup.string()\n  //  .checked(function(value){\n  //     toast.warning(\"Agree to terms and  conidtions \");\n  // }),\n  username: yup.string(\"Username must be string \").required(function (value) {\n    toast.warning(\"Username is required \");\n  }).min(3, function (value) {\n    toast.warning(\"Username  must be atleast 3 charachters\");\n  }).max(32, function (value) {\n    toast.warning(\"Username  must atmost 32 chrachters\");\n  }).test(\"Unique username\", \"Username already in taken\", function (value) {\n    return new Promise((resolve, reject) => {\n      fetch.post(\"http://localhost:3001/api/users/verify/username\", {\n        username: value\n      }).then(res => {\n        if (res.data.msg === \"Username already been taken\") {\n          toast.error(res.data.msg);\n          resolve(false);\n        }\n\n        resolve(true);\n      });\n    });\n  })\n});\n/* Validation ends here */\n\nconst Register = props => {\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n    role: \"user\"\n  });\n  const [message, setMessage] = useState(null);\n  let timerID = useRef(null);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  useEffect(() => {\n    return () => {\n      clearTimeout(timerID);\n    };\n  }, []);\n\n  const onChange = e => {\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    }); //console.log({ user });\n  };\n\n  const resetForm = () => {\n    setUser({\n      username: \"\",\n      password: \"\",\n      role: \"user\"\n    });\n  };\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    AuthService.register(user).then(data => {\n      const {\n        message\n      } = data;\n      setMessage(message);\n      resetForm();\n\n      if (!message.msgError) {\n        timerID = setTimeout(() => {\n          props.history.push(\"/login\");\n        }, 2000);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8 card text-center p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn bg-white\",\n    style: {\n      width: \"150px\",\n      textAlign: \"\",\n      fontWeight: \"bold\"\n    },\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, \"Username \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\" // onChange={onChange}\n    ,\n    style: {\n      width: \"50%\",\n      marginLeft: \"15px\",\n      height: \"35px\",\n      borderRadius: \"0px!important\"\n    },\n    name: \"username\" // value={user.username}\n    ,\n    ref: register,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn bg-white\",\n    style: {\n      width: \"150px\",\n      textAlign: \"\",\n      fontWeight: \"bold\"\n    },\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, \"Email \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control\" // onChange={onChange}\n    ,\n    style: {\n      width: \"50%\",\n      marginLeft: \"15px\",\n      height: \"35px\",\n      borderRadius: \"0px!important\"\n    },\n    name: \"email\" // value={user.email}\n    ,\n    ref: register,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn bg-white\",\n    style: {\n      width: \"150px\",\n      textAlign: \"\",\n      fontWeight: \"bold\"\n    },\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, \"Password \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\" // onChange={onChange}\n    ,\n    style: {\n      width: \"50%\",\n      marginLeft: \"15px\",\n      height: \"35px\",\n      borderRadius: \"0px!important\"\n    },\n    name: \"password\" // value={user.password}\n    ,\n    ref: register,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn bg-white\",\n    style: {\n      width: \"150px\",\n      textAlign: \"\",\n      fontWeight: \"bold\"\n    },\n    htmlFor: \"c_password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }\n  }, \"Confirm Password \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"c_password\",\n    className: \"form-control\" // onChange={onChange}\n    ,\n    style: {\n      width: \"50%\",\n      marginLeft: \"15px\",\n      height: \"35px\",\n      borderRadius: \"0px!important\"\n    },\n    name: \"c_password\" // value={user.c_password}\n    ,\n    ref: register,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn bg-white\",\n    style: {\n      width: \"150px\",\n      textAlign: \"\",\n      fontWeight: \"bold\"\n    },\n    htmlFor: \"mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, \"Mobile \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"mobile\",\n    className: \"form-control\" // onChange={onChange}\n    ,\n    style: {\n      width: \"50%\",\n      marginLeft: \"15px\",\n      height: \"35px\",\n      borderRadius: \"0px!important\"\n    },\n    name: \"mobile\" // value={user.mobile}\n    ,\n    ref: register,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    className: \"form-control\" // onChange={onChange}\n    ,\n    style: {\n      width: \"50%\",\n      marginLeft: \"15px\",\n      height: \"35px\",\n      borderRadius: \"0px!important\"\n    },\n    name: \"role\" // value={user.role}\n    ,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-lg btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, \"Register\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 5\n    }\n  }), message ? /*#__PURE__*/React.createElement(Message, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 16\n    }\n  }) : null, message ? /*#__PURE__*/React.createElement(ToastContainer, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }\n  }) : null);\n};\n\nexport default Register;","map":{"version":3,"sources":["/home/asd/Desktop/development/REACTJS/MernAuthComplete/react/src/component/Register.jsx"],"names":["React","useState","useRef","useEffect","AuthService","Message","yup","yupResolver","useForm","ToastContainer","toast","schema","object","shape","email","string","required","value","warning","test","Promise","resolve","reject","fetch","post","then","res","data","msg","error","password","min","max","c_password","oneOf","ref","username","Register","props","user","setUser","role","message","setMessage","timerID","register","handleSubmit","errors","resolver","clearTimeout","onChange","e","target","name","resetForm","onSubmit","preventDefault","msgError","setTimeout","history","push","width","textAlign","fontWeight","marginLeft","height","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport AuthService from \"./../services/AuthService\";\nimport Message from \"./../component/Message\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers\";\nimport { useForm } from \"react-hook-form\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n\n\n\n\n\nconst schema = yup.object().shape({\n \n\n  email: yup\n    .string()\n    .required(function (value) {\n      toast.warning(\"Email is required\");\n    })\n    .email(\"Invalid email\")\n    .test(\"Unique Email\", \"Email already in use\", function (value) {\n      return new Promise((resolve, reject) => {\n        fetch\n          .post(\"http://localhost:3001/api/users/verify/email\", {\n            email: value,\n          })\n          .then((res) => {\n            if (res.data.msg === \"Email already been taken\") {\n              toast.error(res.data.msg);\n              resolve(false);\n            }\n            resolve(true);\n          });\n      });\n    }),\n\n  password: yup\n    .string(\"Password must be string \")\n    .required(function (value) {\n      toast.warning(\"Password is required\");\n    })\n    .min(3, function (value) {\n      toast.warning(\"Password  must be atleast 3 charachters\");\n    })\n    .max(32, function (value) {\n      toast.warning(\"Password  must atmost 32 chrachters\");\n    }),\n\n  c_password: yup\n    .string()\n    .required(function (value) {\n      toast.warning(\"Confirm password is required\");\n    })\n    .oneOf([yup.ref(\"password\"), null], function (value) {\n      toast.warning(\"Unmatched passwords\");\n    }),\n  // agree:yup.string()\n  //  .checked(function(value){\n  //     toast.warning(\"Agree to terms and  conidtions \");\n  // }),\n\n  username: yup\n    .string(\"Username must be string \")\n    .required(function (value) {\n      toast.warning(\"Username is required \");\n    })\n    .min(3, function (value) {\n      toast.warning(\"Username  must be atleast 3 charachters\");\n    })\n    .max(32, function (value) {\n      toast.warning(\"Username  must atmost 32 chrachters\");\n    })\n    .test(\"Unique username\", \"Username already in taken\", function (value) {\n      return new Promise((resolve, reject) => {\n        fetch\n          .post(\"http://localhost:3001/api/users/verify/username\", {\n            username: value,\n          })\n          .then((res) => {\n            if (res.data.msg === \"Username already been taken\") {\n              toast.error(res.data.msg);\n              resolve(false);\n            }\n            resolve(true);\n          });\n      });\n    }),\n});\n/* Validation ends here */\n\n\n\n\n\n\n\n\n\nconst Register = (props) => {\n  const [user, setUser] = useState({ username: \"\", password: \"\", role: \"user\" });\n  const [message, setMessage] = useState(null);\n  let timerID = useRef(null);\n\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  useEffect(() => {\n    return () => {\n      clearTimeout(timerID);\n    };\n  }, []);\n  const onChange = (e) => {\n    setUser({ ...user, [e.target.name]: e.target.value });\n    //console.log({ user });\n  };\n\n  const resetForm = () => {\n    setUser({ username: \"\", password: \"\", role: \"user\" });\n  };\n  const onSubmit = (data,e) => {\n    e.preventDefault();\n    AuthService.register(user).then((data) => {\n      const { message } = data;\n      setMessage(message);\n      resetForm();\n      if (!message.msgError) {\n        timerID = setTimeout(() => {\n          props.history.push(\"/login\");\n        }, 2000);\n      }\n    });\n  };\n  return (\n    <div className=\"row\">\n    <div className=\"col-md-2\"></div>\n    <div className=\"col-md-8 card text-center p-3\">\n    <form onSubmit={handleSubmit(onSubmit)}>\n    <div className=\"form-group form-inline\">\n    <label className=\"btn bg-white\"style={{width:\"150px\",textAlign:\"\",fontWeight:\"bold\"}} htmlFor=\"username\">Username </label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          // onChange={onChange}\n           style={{width:\"50%\",marginLeft:\"15px\",height:\"35px\",borderRadius:\"0px!important\"}}\n          name=\"username\"\n          // value={user.username}\n          ref={register}\n          required\n        />\n        </div>\n\n           {/*  */}\n           <div className=\"form-group form-inline\">\n    <label className=\"btn bg-white\"style={{width:\"150px\",textAlign:\"\",fontWeight:\"bold\"}} htmlFor=\"email\">Email </label>\n        <input\n          type=\"email\"\n          className=\"form-control\"\n          // onChange={onChange}\n           style={{width:\"50%\",marginLeft:\"15px\",height:\"35px\",borderRadius:\"0px!important\"}}\n          name=\"email\"\n          // value={user.email}\n          ref={register}\n          required\n        />\n         </div>\n\n         {/*  */}\n\n\n        <div className=\"form-group form-inline\">\n    <label className=\"btn bg-white\"style={{width:\"150px\",textAlign:\"\",fontWeight:\"bold\"}} htmlFor=\"password\">Password </label>\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          // onChange={onChange}\n           style={{width:\"50%\",marginLeft:\"15px\",height:\"35px\",borderRadius:\"0px!important\"}}\n          name=\"password\"\n          // value={user.password}\n          ref={register}\n          required\n        />\n         </div>\n         {/*  */}\n         <div className=\"form-group form-inline\">\n    <label className=\"btn bg-white\"style={{width:\"150px\",textAlign:\"\",fontWeight:\"bold\"}} htmlFor=\"c_password\">Confirm Password </label>\n        <input\n          type=\"c_password\"\n          className=\"form-control\"\n          // onChange={onChange}\n           style={{width:\"50%\",marginLeft:\"15px\",height:\"35px\",borderRadius:\"0px!important\"}}\n          name=\"c_password\"\n          // value={user.c_password}\n          ref={register}\n          required\n        />\n         </div>\n\n         {/*  */}\n          {/*  */}\n          <div className=\"form-group form-inline\">\n    <label className=\"btn bg-white\"style={{width:\"150px\",textAlign:\"\",fontWeight:\"bold\"}} htmlFor=\"mobile\">Mobile </label>\n        <input\n          type=\"mobile\"\n          className=\"form-control\"\n          // onChange={onChange}\n           style={{width:\"50%\",marginLeft:\"15px\",height:\"35px\",borderRadius:\"0px!important\"}}\n          name=\"mobile\"\n          // value={user.mobile}\n          ref={register}\n          required\n        />\n         </div>\n\n         {/*  */}\n\n       \n         <div className=\"form-group form-inline\">\n    {/* <label className=\"btn bg-white\"style={{width:\"150px\",textAlign:\"\",fontWeight:\"bold\"}} htmlFor=\"role\">Role </label> */}\n        \n        <input\n          type=\"hidden\"\n          className=\"form-control\"\n          // onChange={onChange}\n           style={{width:\"50%\",marginLeft:\"15px\",height:\"35px\",borderRadius:\"0px!important\"}}\n          name=\"role\"\n          // value={user.role}\n          required\n        />\n      </div>\n      <div className=\"text-center\">\n   \n        <button type=\"submit\" className=\"btn btn-lg btn-success\">\n          Register\n        </button>\n        </div>\n      </form>\n    </div>\n\n    <div className=\"col-md-2\"></div>\n    {message ? <Message message={message} /> : null}\n      {message ?  <ToastContainer message={message} /> : null}\n    </div>\n  );\n};\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}