{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/development/REACTJS/MernAuthComplete/react/src/component/Register.jsx\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from \"yup\";\nimport AuthService from \"./../services/AuthService\";\nimport Message from \"./../component/Message\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n/* Validation starts here */\n\nconst schema = yup.object().shape({\n  first_name: yup.string(\"First Name must be string\").required(function (value) {\n    toast.warning(\"First name  is required\");\n  }).min(3, function (value) {\n    toast.warning(\"First name  must be atleast 3 charachters\");\n  }).max(32, function (value) {\n    toast.warning(\"First name  must atmost 32 chrachters\");\n  }),\n  last_name: yup.string(\"Last Name must be string \").required(function (value) {\n    toast.warning(\"last name is required\");\n  }).min(3, function (value) {\n    toast.warning(\"Last name  must be atleast 3 charachters\");\n  }).max(32, function (value) {\n    toast.warning(\"Last name  must atmost 32 chrachters\");\n  }),\n  email: yup.string().required(function (value) {\n    toast.warning(\"Email is required\");\n  }).email(\"Invalid email\").test(\"Unique Email\", \"Email already in use\", function (value) {\n    return new Promise((resolve, reject) => {\n      axios.post(\"http://localhost:3001/api/users/verify/email\", {\n        email: value\n      }).then(res => {\n        if (res.data.msg === \"Email already been taken\") {\n          toast.error(res.data.msg);\n          resolve(false);\n        }\n\n        resolve(true);\n      });\n    });\n  }),\n  password: yup.string(\"Password must be string \").required(function (value) {\n    toast.warning(\"Password is required\");\n  }).min(3, function (value) {\n    toast.warning(\"Password  must be atleast 3 charachters\");\n  }).max(32, function (value) {\n    toast.warning(\"Password  must atmost 32 chrachters\");\n  }),\n  c_password: yup.string().required(function (value) {\n    toast.warning(\"Confirm password is required\");\n  }).oneOf([yup.ref(\"password\"), null], function (value) {\n    toast.warning(\"Unmatched passwords\");\n  }),\n  // agree:yup.string()\n  //  .checked(function(value){\n  //     toast.warning(\"Agree to terms and  conidtions \");\n  // }),\n  username: yup.string(\"Username must be string \").required(function (value) {\n    toast.warning(\"Username is required \");\n  }).min(3, function (value) {\n    toast.warning(\"Username  must be atleast 3 charachters\");\n  }).max(32, function (value) {\n    toast.warning(\"Username  must atmost 32 chrachters\");\n  }).test(\"Unique username\", \"Username already in taken\", function (value) {\n    return new Promise((resolve, reject) => {\n      axios.post(\"http://localhost:3001/api/users/verify/username\", {\n        username: value\n      }).then(res => {\n        if (res.data.msg === \"Username already been taken\") {\n          toast.error(res.data.msg);\n          resolve(false);\n        }\n\n        resolve(true);\n      });\n    });\n  })\n});\n/* Validation ends here */\n\n/* Functional componennet starts here */\n\nconst Register = () => {\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(d => console.log(d)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"username\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"email\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"role\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"password\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"c_password\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"mobile\",\n    type: \"text\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Register;","map":{"version":3,"sources":["/home/asd/Desktop/development/REACTJS/MernAuthComplete/react/src/component/Register.jsx"],"names":["React","useState","useRef","useEffect","useForm","yupResolver","yup","AuthService","Message","ToastContainer","toast","schema","object","shape","first_name","string","required","value","warning","min","max","last_name","email","test","Promise","resolve","reject","axios","post","then","res","data","msg","error","password","c_password","oneOf","ref","username","Register","register","handleSubmit","resolver","d","console","log"],"mappings":"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","sourcesContent":["import React ,{useState, useRef, useEffect}from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from \"yup\";\nimport AuthService from \"./../services/AuthService\";\nimport Message from \"./../component/Message\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n/* Validation starts here */\nconst schema = yup.object().shape({\n  first_name: yup\n    .string(\"First Name must be string\")\n    .required(function (value) {\n      toast.warning(\"First name  is required\");\n    })\n    .min(3, function (value) {\n      toast.warning(\"First name  must be atleast 3 charachters\");\n    })\n    .max(32, function (value) {\n      toast.warning(\"First name  must atmost 32 chrachters\");\n    }),\n\n  last_name: yup\n    .string(\"Last Name must be string \")\n    .required(function (value) {\n      toast.warning(\"last name is required\");\n    })\n    .min(3, function (value) {\n      toast.warning(\"Last name  must be atleast 3 charachters\");\n    })\n    .max(32, function (value) {\n      toast.warning(\"Last name  must atmost 32 chrachters\");\n    }),\n\n  email: yup\n    .string()\n    .required(function (value) {\n      toast.warning(\"Email is required\");\n    })\n    .email(\"Invalid email\")\n    .test(\"Unique Email\", \"Email already in use\", function (value) {\n      return new Promise((resolve, reject) => {\n        axios\n          .post(\"http://localhost:3001/api/users/verify/email\", {\n            email: value,\n          })\n          .then((res) => {\n            if (res.data.msg === \"Email already been taken\") {\n              toast.error(res.data.msg);\n              resolve(false);\n            }\n            resolve(true);\n          });\n      });\n    }),\n\n  password: yup\n    .string(\"Password must be string \")\n    .required(function (value) {\n      toast.warning(\"Password is required\");\n    })\n    .min(3, function (value) {\n      toast.warning(\"Password  must be atleast 3 charachters\");\n    })\n    .max(32, function (value) {\n      toast.warning(\"Password  must atmost 32 chrachters\");\n    }),\n\n  c_password: yup\n    .string()\n    .required(function (value) {\n      toast.warning(\"Confirm password is required\");\n    })\n    .oneOf([yup.ref(\"password\"), null], function (value) {\n      toast.warning(\"Unmatched passwords\");\n    }),\n  // agree:yup.string()\n  //  .checked(function(value){\n  //     toast.warning(\"Agree to terms and  conidtions \");\n  // }),\n\n  username: yup\n    .string(\"Username must be string \")\n    .required(function (value) {\n      toast.warning(\"Username is required \");\n    })\n    .min(3, function (value) {\n      toast.warning(\"Username  must be atleast 3 charachters\");\n    })\n    .max(32, function (value) {\n      toast.warning(\"Username  must atmost 32 chrachters\");\n    })\n    .test(\"Unique username\", \"Username already in taken\", function (value) {\n      return new Promise((resolve, reject) => {\n        axios\n          .post(\"http://localhost:3001/api/users/verify/username\", {\n            username: value,\n          })\n          .then((res) => {\n            if (res.data.msg === \"Username already been taken\") {\n              toast.error(res.data.msg);\n              resolve(false);\n            }\n            resolve(true);\n          });\n      });\n    }),\n});\n/* Validation ends here */\n/* Functional componennet starts here */\n\nconst Register = () => {\n  const { register, handleSubmit } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  return (\n    <form onSubmit={handleSubmit(d => console.log(d))}>\n      <input className=\"form-control\" name=\"username\" ref={register} />\n      <input className=\"form-control\" name=\"email\" type=\"text\" ref={register} />\n      <input className=\"form-control\" name=\"role\" ref={register} />\n      <input className=\"form-control\" name=\"password\" type=\"text\" ref={register} />\n      <input className=\"form-control\" name=\"c_password\" type=\"text\" ref={register} />\n      <input className=\"form-control\" name=\"mobile\" type=\"text\" ref={register} />\n      <input className=\"form-control\" type=\"submit\" />\n    </form>\n  );\n};\nexport default Register;"]},"metadata":{},"sourceType":"module"}