{"ast":null,"code":"import _slicedToArray from\"/home/hadooop/Desktop/development/MERN/MernAuth/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect,useRef}from\"react\";import TodoItem from\"./TodoItem\";import TodoService from\"./../services/TodoService\";import{AuthContext}from\"./../context/AuthContext\";import Message from\"./Message\";var Todo=function Todo(props){var _useState=useState({name:\"\"}),_useState2=_slicedToArray(_useState,2),todo=_useState2[0],setTodo=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),todos=_useState4[0],setTodos=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),message=_useState6[0],setMessage=_useState6[1];var authContext=useContext(AuthContext);useEffect(function(){TodoService.getTodos().then(function(data){//   console.log(data[\"todos\"]);\nsetTodos(data[\"todos\"]);});},[]);var onSubmit=function onSubmit(e){e.preventDefault();TodoService.postTodo(todo).then(function(data){var message=data.message;resetForm();if(!message.msgError){TodoService.getTodos().then(function(getData){setTodos(getData.todos);setMessage(message);});}//client token expired\nelse if(message.msgBody===\"unAuthrozied\"){setMessage(message);//update global state incase token expires\nauthContext.setUser({username:\"\",role:\"\"});authContext.setIsAuthenticated(false);}//error condition handled here\nelse{setMessage(message);}});};var onChange=function onChange(e){setTodo({name:e.target.value});};var resetForm=function resetForm(){setTodo({name:\"\"});};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"ul\",{className:\"list-group\"},todos.map(function(todo){return/*#__PURE__*/React.createElement(TodoItem,{key:todo._id,todo:todo});})),/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"todo\"},\"Enter Todo\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",onChange:onChange,value:todo.name,name:\"name\",required:true}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"btn btn-lg btn-success\"})),message?/*#__PURE__*/React.createElement(Message,{message:message}):null);};export default Todo;","map":{"version":3,"sources":["/home/hadooop/Desktop/development/MERN/MernAuth/react/src/component/Todos.jsx"],"names":["React","useState","useContext","useEffect","useRef","TodoItem","TodoService","AuthContext","Message","Todo","props","name","todo","setTodo","todos","setTodos","message","setMessage","authContext","getTodos","then","data","onSubmit","e","preventDefault","postTodo","resetForm","msgError","getData","msgBody","setUser","username","role","setIsAuthenticated","onChange","target","value","map","_id"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport TodoService from \"./../services/TodoService\";\nimport { AuthContext } from \"./../context/AuthContext\";\nimport Message from \"./Message\";\n\nconst Todo = (props) => {\n  const [todo, setTodo] = useState({ name: \"\" });\n  const [todos, setTodos] = useState([]);\n  const [message, setMessage] = useState(null);\n  const authContext = useContext(AuthContext);\n\n  useEffect(() => {\n    TodoService.getTodos().then((data) => {\n      //   console.log(data[\"todos\"]);\n      setTodos(data[\"todos\"]);\n    });\n  }, []);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    TodoService.postTodo(todo).then((data) => {\n      const { message } = data;\n      resetForm();\n      if (!message.msgError) {\n        TodoService.getTodos().then((getData) => {\n          setTodos(getData.todos);\n          setMessage(message);\n        });\n      }\n      //client token expired\n      else if (message.msgBody === \"unAuthrozied\") {\n        setMessage(message);\n        //update global state incase token expires\n        authContext.setUser({ username: \"\", role: \"\" });\n        authContext.setIsAuthenticated(false);\n      }\n      //error condition handled here\n      else {\n        setMessage(message);\n      }\n    });\n  };\n  const onChange = (e) => {\n    setTodo({ name: e.target.value });\n  };\n\n  const resetForm = () => {\n    setTodo({ name: \"\" });\n  };\n  return (\n    <div>\n      <ul className=\"list-group\">\n        {todos.map((todo) => {\n          return <TodoItem key={todo._id} todo={todo} />;\n        })}\n      </ul>\n\n      <form onSubmit={onSubmit}>\n        <label htmlFor=\"todo\">Enter Todo</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          onChange={onChange}\n          value={todo.name}\n          name=\"name\"\n          required\n        />\n        <button type=\"submit\" className=\"btn btn-lg btn-success\"></button>\n      </form>\n      {message ? <Message message={message} /> : null}\n    </div>\n  );\n};\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}