{"ast":null,"code":"var _jsxFileName = \"/home/hadooop/Desktop/development/MERN/MernAuth/react/src/hoc/PrivateRoute.jsx\";\nimport React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./../context/AuthContext\";\n\nconst PrivateRoute = ({\n  component: Component,\n  roles,\n  ...rest\n}) => {\n  const {\n    isAuthenticated,\n    user\n  } = useContext(AuthContext);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (!isAuthenticated) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: \"/login\",\n            state: {\n              from: props.location\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }\n        });\n      }\n\n      if (!user.roles.includes(user.role)) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: \"/\",\n            state: {\n              from: props.location\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }\n        });\n      } else {}\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/home/hadooop/Desktop/development/MERN/MernAuth/react/src/hoc/PrivateRoute.jsx"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","component","Component","roles","rest","isAuthenticated","user","props","pathname","state","from","location","includes","role"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,0BAA5B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,KAAxB;AAA+B,KAAGC;AAAlC,CAAD,KAA8C;AACjE,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA4BV,UAAU,CAACG,WAAD,CAA5C;AACA,sBACE,oBAAC,KAAD,oBACMK,IADN;AAEE,IAAA,MAAM,EAAGG,KAAD,IAAW;AACjB,UAAI,CAACF,eAAL,EAAsB;AACpB,4BACE,oBAAC,QAAD;AACE,UAAA,EAAE,EAAE;AAAEG,YAAAA,QAAQ,EAAE,QAAZ;AAAsBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA7B,WADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AACD,UAAI,CAACL,IAAI,CAACH,KAAL,CAAWS,QAAX,CAAoBN,IAAI,CAACO,IAAzB,CAAL,EAAqC;AACnC,4BACE,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEL,YAAAA,QAAQ,EAAE,GAAZ;AAAiBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAAxB,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OAJD,MAKI,CAEH;AACF,KAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAsBD,CAxBD;;AA0BA,eAAeX,YAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./../context/AuthContext\";\n\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => {\n  const { isAuthenticated, user } = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!isAuthenticated) {\n          return (\n            <Redirect\n              to={{ pathname: \"/login\", state: { from: props.location } }}\n            />\n          );\n        }\n        if (!user.roles.includes(user.role)) {\n          return (\n            <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n          );\n        }\n        else{\n\n        }\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}