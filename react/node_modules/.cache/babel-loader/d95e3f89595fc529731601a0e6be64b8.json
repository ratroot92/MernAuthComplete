{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/development/REACTJS/MernAuthComplete/react/src/component/Register.jsx\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from \"yup\";\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  age: yup.number().required()\n});\n\nconst App = () => {\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(d => console.log(d)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"name\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"age\",\n    type: \"number\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n};\n\nshouldUnregister: b;","map":{"version":3,"sources":["/home/asd/Desktop/development/REACTJS/MernAuthComplete/react/src/component/Register.jsx"],"names":["React","useForm","yupResolver","yup","schema","object","shape","name","string","required","age","number","App","register","handleSubmit","resolver","d","console","log","shouldUnregister","b"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,MAAMC,MAAM,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,EAAAA,IAAI,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,QAAb,EAD0B;AAEhCC,EAAAA,GAAG,EAAEP,GAAG,CAACQ,MAAJ,GAAaF,QAAb;AAF2B,CAAnB,CAAf;;AAKA,MAAMG,GAAG,GAAG,MAAM;AAChB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6Bb,OAAO,CAAC;AACzCc,IAAAA,QAAQ,EAAEb,WAAW,CAACE,MAAD;AADoB,GAAD,CAA1C;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEU,YAAY,CAACE,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAN,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAEH,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,IAAI,EAAC,KAAZ;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAgC,IAAA,GAAG,EAAEA,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAZD;;AAaAM,gBAAgB,EAAEC,CAAC","sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from \"yup\";\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  age: yup.number().required(),\n});\n\nconst App = () => {\n  const { register, handleSubmit } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  return (\n    <form onSubmit={handleSubmit(d => console.log(d))}>\n      <input name=\"name\" ref={register} />\n      <input name=\"age\" type=\"number\" ref={register} />\n      <input type=\"submit\" />\n    </form>\n  );\n};\nshouldUnregister: b"]},"metadata":{},"sourceType":"module"}